{"ast":null,"code":"import { all, fork, takeLatest, delay, put, call } from \"@redux-saga/core/effects\";\nimport axios from \"axios\";\nexport default function* productSaga() {\n  function loadProductAPI() {\n    return axios.get(`https://fakestoreapi.com/products`);\n  }\n\n  function* loadProduct() {\n    try {\n      const result = yield call(loadProductAPI);\n      yield put({\n        type: 'LOAD_PRODUCT_SUCCESS',\n        data: result.data\n      });\n    } catch (err) {\n      console.error(err);\n      yield put({\n        type: 'LOAD_PRODUCT_FAILURE',\n        error: err.response.data\n      });\n    }\n  }\n\n  function* searchProduct(searchVal) {\n    try {\n      const result = yield call(loadProductAPI);\n      yield put({\n        type: 'LOAD_PRODUCT_SUCCESS',\n        data: result.data\n      });\n    } catch (err) {\n      console.error(err);\n      yield put({\n        type: 'LOAD_PRODUCT_FAILURE',\n        error: err.response.data\n      });\n    }\n  }\n\n  function* watchLoadProduct() {\n    yield takeLatest('LOAD_PRODUCT_REQUEST', loadProduct);\n  }\n\n  yield all([fork(watchLoadProduct)]);\n}","map":{"version":3,"sources":["C:/Users/ian07/Desktop/react-fake-shop/sagas/product.js"],"names":["all","fork","takeLatest","delay","put","call","axios","productSaga","loadProductAPI","get","loadProduct","result","type","data","err","console","error","response","searchProduct","searchVal","watchLoadProduct"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,GAAvC,EAA4CC,IAA5C,QAAwD,0BAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,UAAUC,WAAV,GAAuB;AAClC,WAASC,cAAT,GAAyB;AACrB,WAAOF,KAAK,CAACG,GAAN,CAAW,mCAAX,CAAP;AACH;;AAED,YAAUC,WAAV,GAAwB;AACpB,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMN,IAAI,CAACG,cAAD,CAAzB;AACA,YAAMJ,GAAG,CAAC;AACRQ,QAAAA,IAAI,EAAE,sBADE;AAERC,QAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,OAAD,CAAT;AAID,KAND,CAME,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,YAAMV,GAAG,CAAC;AACRQ,QAAAA,IAAI,EAAE,sBADE;AAERI,QAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaJ;AAFZ,OAAD,CAAT;AAID;AACF;;AAEH,YAAUK,aAAV,CAAwBC,SAAxB,EAAmC;AAC/B,QAAI;AACF,YAAMR,MAAM,GAAG,MAAMN,IAAI,CAACG,cAAD,CAAzB;AACA,YAAMJ,GAAG,CAAC;AACRQ,QAAAA,IAAI,EAAE,sBADE;AAERC,QAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,OAAD,CAAT;AAID,KAND,CAME,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,YAAMV,GAAG,CAAC;AACRQ,QAAAA,IAAI,EAAE,sBADE;AAERI,QAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaJ;AAFZ,OAAD,CAAT;AAID;AACF;;AAGH,YAAUO,gBAAV,GAA4B;AAC1B,UAAMlB,UAAU,CAAC,sBAAD,EAAyBQ,WAAzB,CAAhB;AACD;;AAED,QAAMV,GAAG,CAAC,CACNC,IAAI,CAACmB,gBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, takeLatest, delay, put, call } from \"@redux-saga/core/effects\";\r\nimport axios from \"axios\";\r\n\r\nexport default function* productSaga(){\r\n    function loadProductAPI(){\r\n        return axios.get(`https://fakestoreapi.com/products`);\r\n    }\r\n\r\n    function* loadProduct() {\r\n        try {\r\n          const result = yield call(loadProductAPI);\r\n          yield put({\r\n            type: 'LOAD_PRODUCT_SUCCESS',\r\n            data: result.data,\r\n          });\r\n        } catch (err) {\r\n          console.error(err);\r\n          yield put({\r\n            type: 'LOAD_PRODUCT_FAILURE',\r\n            error: err.response.data,\r\n          });\r\n        }\r\n      }\r\n\r\n    function* searchProduct(searchVal) {\r\n        try {\r\n          const result = yield call(loadProductAPI);\r\n          yield put({\r\n            type: 'LOAD_PRODUCT_SUCCESS',\r\n            data: result.data,\r\n          });\r\n        } catch (err) {\r\n          console.error(err);\r\n          yield put({\r\n            type: 'LOAD_PRODUCT_FAILURE',\r\n            error: err.response.data,\r\n          });\r\n        }\r\n      }\r\n\r\n      \r\n    function* watchLoadProduct(){\r\n      yield takeLatest('LOAD_PRODUCT_REQUEST', loadProduct);\r\n    }\r\n\r\n    yield all([\r\n        fork(watchLoadProduct)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}