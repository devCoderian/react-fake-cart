{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(productSaga);\n\nimport { all, fork, takeLatest, delay, put, call } from \"@redux-saga/core/effects\";\nimport axios from \"axios\";\nexport default function productSaga() {\n  var _marked, _marked2, _marked3, _marked4, loadProductAPI, SearchProductAPI, loadProduct, searchProduct, watchLoadProduct, watchSearchProduct;\n\n  return _regeneratorRuntime.wrap(function productSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          watchSearchProduct = function _watchSearchProduct() {\n            return _regeneratorRuntime.wrap(function watchSearchProduct$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return takeLatest('SEARCH_PRODUCT_REQUEST', searchProduct);\n\n                  case 2:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _marked4);\n          };\n\n          watchLoadProduct = function _watchLoadProduct() {\n            return _regeneratorRuntime.wrap(function watchLoadProduct$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return takeLatest('LOAD_PRODUCT_REQUEST', loadProduct);\n\n                  case 2:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _marked3);\n          };\n\n          searchProduct = function _searchProduct() {\n            var result;\n            return _regeneratorRuntime.wrap(function searchProduct$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.prev = 0;\n                    _context2.next = 3;\n                    return call(loadProductAPI);\n\n                  case 3:\n                    result = _context2.sent;\n                    _context2.next = 6;\n                    return put({\n                      type: 'SEARCH_PRODUCT_SUCCESS',\n                      data: result.data\n                    });\n\n                  case 6:\n                    _context2.next = 13;\n                    break;\n\n                  case 8:\n                    _context2.prev = 8;\n                    _context2.t0 = _context2[\"catch\"](0);\n                    console.error(_context2.t0);\n                    _context2.next = 13;\n                    return put({\n                      type: 'SEARCH_PRODUCT_FAILURE',\n                      error: _context2.t0.response.data\n                    });\n\n                  case 13:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _marked2, null, [[0, 8]]);\n          };\n\n          loadProduct = function _loadProduct() {\n            var result;\n            return _regeneratorRuntime.wrap(function loadProduct$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return call(loadProductAPI);\n\n                  case 3:\n                    result = _context.sent;\n                    _context.next = 6;\n                    return put({\n                      type: 'LOAD_PRODUCT_SUCCESS',\n                      data: result.data\n                    });\n\n                  case 6:\n                    _context.next = 13;\n                    break;\n\n                  case 8:\n                    _context.prev = 8;\n                    _context.t0 = _context[\"catch\"](0);\n                    console.error(_context.t0);\n                    _context.next = 13;\n                    return put({\n                      type: 'LOAD_PRODUCT_FAILURE',\n                      error: _context.t0.response.data\n                    });\n\n                  case 13:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _marked, null, [[0, 8]]);\n          };\n\n          SearchProductAPI = function _SearchProductAPI() {\n            return axios.get(\"https://fakestoreapi.com/products\");\n          };\n\n          loadProductAPI = function _loadProductAPI() {\n            return axios.get(\"https://fakestoreapi.com/products\");\n          };\n\n          _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadProduct), _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(searchProduct), _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadProduct), _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchSearchProduct);\n          _context5.next = 9;\n          return all([fork(watchLoadProduct), fork(watchSearchProduct)]);\n\n        case 9:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/ian07/Desktop/react-fake-shop/sagas/product.js"],"names":["productSaga","all","fork","takeLatest","delay","put","call","axios","loadProductAPI","SearchProductAPI","loadProduct","searchProduct","watchLoadProduct","watchSearchProduct","result","type","data","console","error","response","get"],"mappings":";;qDAGyBA,W;;AAHzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,GAAvC,EAA4CC,IAA5C,QAAwD,0BAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAAUP,WAAV;AAAA,6CACFQ,cADE,EAKFC,gBALE,EASDC,WATC,EAyBDC,aAzBC,EA8CDC,gBA9CC,EAiDDC,kBAjDC;;AAAA;AAAA;AAAA;AAAA;AAiDDA,UAAAA,kBAjDC;AAAA;AAAA;AAAA;AAAA;AAAA;AAkDT,2BAAMV,UAAU,CAAC,wBAAD,EAA2BQ,aAA3B,CAAhB;;AAlDS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA8CDC,UAAAA,gBA9CC;AAAA;AAAA;AAAA;AAAA;AAAA;AA+CT,2BAAMT,UAAU,CAAC,sBAAD,EAAyBO,WAAzB,CAAhB;;AA/CS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyBDC,UAAAA,aAzBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BU,2BAAML,IAAI,CAACE,cAAD,CAAV;;AA3BV;AA2BCM,oBAAAA,MA3BD;AAAA;AAgCL,2BAAMT,GAAG,CAAC;AACRU,sBAAAA,IAAI,EAAE,wBADE;AAERC,sBAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,qBAAD,CAAT;;AAhCK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqCLC,oBAAAA,OAAO,CAACC,KAAR;AArCK;AAsCL,2BAAMb,GAAG,CAAC;AACRU,sBAAAA,IAAI,EAAE,wBADE;AAERG,sBAAAA,KAAK,EAAE,aAAIC,QAAJ,CAAaH;AAFZ,qBAAD,CAAT;;AAtCK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASDN,UAAAA,WATC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWU,2BAAMJ,IAAI,CAACE,cAAD,CAAV;;AAXV;AAWCM,oBAAAA,MAXD;AAAA;AAYL,2BAAMT,GAAG,CAAC;AACRU,sBAAAA,IAAI,EAAE,sBADE;AAERC,sBAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,qBAAD,CAAT;;AAZK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBLC,oBAAAA,OAAO,CAACC,KAAR;AAjBK;AAkBL,2BAAMb,GAAG,CAAC;AACRU,sBAAAA,IAAI,EAAE,sBADE;AAERG,sBAAAA,KAAK,EAAE,YAAIC,QAAJ,CAAaH;AAFZ,qBAAD,CAAT;;AAlBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKFP,UAAAA,gBALE,gCAKgB;AACzB,mBAAOF,KAAK,CAACa,GAAN,qCAAP;AACD,WAPU;;AACFZ,UAAAA,cADE,8BACc;AACrB,mBAAOD,KAAK,CAACa,GAAN,qCAAP;AACH,WAHU;;AAAA,0DASDV,WATC,oDAyBDC,aAzBC,oDA8CDC,gBA9CC,oDAiDDC,kBAjDC;AAAA;AAqDX,iBAAMZ,GAAG,CAAC,CACNC,IAAI,CAACU,gBAAD,CADE,EAENV,IAAI,CAACW,kBAAD,CAFE,CAAD,CAAT;;AArDW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, takeLatest, delay, put, call } from \"@redux-saga/core/effects\";\r\nimport axios from \"axios\";\r\n\r\nexport default function* productSaga(){\r\n    function loadProductAPI(){\r\n        return axios.get(`https://fakestoreapi.com/products`);\r\n    }\r\n\r\n    function SearchProductAPI(){\r\n      return axios.get(`https://fakestoreapi.com/products`);\r\n    }\r\n\r\n    function* loadProduct() {\r\n        try {\r\n          const result = yield call(loadProductAPI);\r\n          yield put({\r\n            type: 'LOAD_PRODUCT_SUCCESS',\r\n            data: result.data,\r\n          });\r\n        } catch (err) {\r\n          console.error(err);\r\n          yield put({\r\n            type: 'LOAD_PRODUCT_FAILURE',\r\n            error: err.response.data,\r\n          });\r\n        }\r\n      }\r\n\r\n    function* searchProduct() {\r\n        try {\r\n          const result = yield call(loadProductAPI);\r\n          // result.data.filter((item)=>{\r\n          //          return item.title.toLocaleUpperCase().includes(searchVal.toLocaleUpperCase())\r\n          //         });\r\n          // console.log(result.data);\r\n          yield put({\r\n            type: 'SEARCH_PRODUCT_SUCCESS',\r\n            data: result.data\r\n          })\r\n          } catch (err) {\r\n          console.error(err);\r\n          yield put({\r\n            type: 'SEARCH_PRODUCT_FAILURE',\r\n            error: err.response.data,\r\n          });\r\n        }\r\n      }\r\n\r\n      \r\n    function* watchLoadProduct(){\r\n      yield takeLatest('LOAD_PRODUCT_REQUEST', loadProduct);\r\n    }\r\n    function* watchSearchProduct(){\r\n      yield takeLatest('SEARCH_PRODUCT_REQUEST', searchProduct);\r\n    }\r\n\r\n    yield all([\r\n        fork(watchLoadProduct),\r\n        fork(watchSearchProduct)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}