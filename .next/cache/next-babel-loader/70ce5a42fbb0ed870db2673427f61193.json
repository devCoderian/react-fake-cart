{"ast":null,"code":"import { all, fork, takeLatest, delay, put } from \"@redux-saga/core/effects\";\nexport default function* cartSaga() {\n  function addCartAPI(data) {\n    return axios.post('/api/addCart', data); // -> 실제 서버에 요청을 보냄\n  }\n\n  function* addCart(action) {\n    try {\n      //yield call해서 로그인 api를 실행함\n      //const result =  yield call(addCartAPI, action.data);\n      yield delay(1000);\n      yield put({\n        type: 'ADD_CART_SUCCESS',\n        data: result.data\n      });\n    } catch (err) {\n      yield put({\n        type: 'ADD_CART_FAILURE',\n        data: err.response.data\n      });\n    }\n  }\n\n  function* watchAddCart() {\n    yield takeLatest('ADD_CART_REQUEST', addCart);\n  }\n\n  yield all([fork(watchAddCart)]);\n}","map":{"version":3,"sources":["C:/Users/goman/Desktop/react-fake-cart/sagas/cart.js"],"names":["all","fork","takeLatest","delay","put","cartSaga","addCartAPI","data","axios","post","addCart","action","type","result","err","response","watchAddCart"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,GAAvC,QAAkD,0BAAlD;AACA,eAAe,UAAUC,QAAV,GAAoB;AAG3B,WAASC,UAAT,CAAoBC,IAApB,EAAyB;AACrB,WAAOC,KAAK,CAACC,IAAN,CAAW,cAAX,EAA2BF,IAA3B,CAAP,CADqB,CAErB;AAEH;;AAED,YAAUG,OAAV,CAAkBC,MAAlB,EAAyB;AACrB,QAAG;AACC;AACA;AACA,YAAMR,KAAK,CAAC,IAAD,CAAX;AACA,YAAMC,GAAG,CAAC;AACNQ,QAAAA,IAAI,EAAE,kBADA;AAENL,QAAAA,IAAI,EAAEM,MAAM,CAACN;AAFP,OAAD,CAAT;AAIH,KARD,CAQC,OAAMO,GAAN,EAAU;AACP,YAAMV,GAAG,CAAC;AACNQ,QAAAA,IAAI,EAAE,kBADA;AAENL,QAAAA,IAAI,EAACO,GAAG,CAACC,QAAJ,CAAaR;AAFZ,OAAD,CAAT;AAIH;AACJ;;AAIL,YAAUS,YAAV,GAAwB;AACpB,UAAMd,UAAU,CAAC,kBAAD,EAAqBQ,OAArB,CAAhB;AACH;;AAED,QAAMV,GAAG,CAAC,CACNC,IAAI,CAACe,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, takeLatest, delay, put } from \"@redux-saga/core/effects\";\r\nexport default function* cartSaga(){\r\n    \r\n\r\n        function addCartAPI(data){\r\n            return axios.post('/api/addCart', data)\r\n            // -> 실제 서버에 요청을 보냄\r\n\r\n        }\r\n\r\n        function* addCart(action){\r\n            try{\r\n                //yield call해서 로그인 api를 실행함\r\n                //const result =  yield call(addCartAPI, action.data);\r\n                yield delay(1000);\r\n                yield put({\r\n                    type: 'ADD_CART_SUCCESS',\r\n                    data: result.data\r\n                });\r\n            }catch(err){\r\n                yield put({\r\n                    type: 'ADD_CART_FAILURE',\r\n                    data:err.response.data,\r\n                });\r\n            }\r\n        }\r\n\r\n        \r\n\r\n    function* watchAddCart(){\r\n        yield takeLatest('ADD_CART_REQUEST', addCart);\r\n    }\r\n\r\n    yield all([\r\n        fork(watchAddCart)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}