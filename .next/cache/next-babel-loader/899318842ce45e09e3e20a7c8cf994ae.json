{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport reducer from '../reducers/index';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"@redux-saga/core\";\nimport rootSaga from '../sagas'; //logger\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n}; //configureStore -> store 설정\n\n\nvar configureStore = function configureStore() {\n  //redux-saga\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer); // store에 sagaTask 붙이기\n\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}; //두번째 인자 옵션 debug모드 true 추적이 쉬워진다. \n\n\nvar wrapper = createWrapper(configureStore, {\n  debug: process.env.Node_ENV === ' development'\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/ian07/Desktop/react-fake-shop/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","reducer","composeWithDevTools","createSagaMiddleware","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug","process","env","Node_ENV"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SAA2B,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAU;AACpEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACH,KAHmD;AAAA,GAA3B;AAAA,CAAzB,C,CAMA;;;AACA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAEzB;AACA,MAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AAEA,MAAMW,WAAW,GAAG,CAACD,cAAD,EAAiBR,gBAAjB,CAApB;AACA,MAAMU,QAAQ,GAAG,QACfhB,OAAO,CAACD,eAAe,MAAf,SAAmBgB,WAAnB,CAAD,CADQ,GAEfZ,mBAAmB,CAACJ,eAAe,MAAf,SAAmBgB,WAAnB,CAAD,CAFrB;AAIA,MAAME,KAAK,GAAGhB,WAAW,CAACC,OAAD,EAAUc,QAAV,CAAzB,CAVyB,CAWzB;;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBd,QAAnB,CAAjB;AACA,SAAOY,KAAP;AACH,CAdD,C,CAgBA;;;AACA,IAAMG,OAAO,GAAGtB,aAAa,CAACe,cAAD,EAAgB;AACzCQ,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AADS,CAAhB,CAA7B;AAIA,eAAeJ,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport reducer from '../reducers/index'\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"@redux-saga/core\";\r\nimport rootSaga from '../sagas';\r\n\r\n//logger\r\nconst loggerMiddleware = ({ dispatch, getState}) => (next) => (action)=>{\r\n    console.log(action);\r\n    return next(action);\r\n}\r\n\r\n\r\n//configureStore -> store 설정\r\nconst configureStore = () => {\r\n\r\n    //redux-saga\r\n    const sagaMiddleware = createSagaMiddleware();\r\n\r\n    const middlewares = [sagaMiddleware, loggerMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(applyMiddleware(...middlewares))\r\n    \r\n    const store = createStore(reducer, enhancer);\r\n    // store에 sagaTask 붙이기\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\n\r\n//두번째 인자 옵션 debug모드 true 추적이 쉬워진다. \r\nconst wrapper = createWrapper(configureStore,{\r\n    debug: process.env.Node_ENV === ' development'\r\n});\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}