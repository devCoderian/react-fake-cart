{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  id: 1,\n  User: {\n    id: 1,\n    userId: 'ian'\n  },\n  Order: [{\n    quantity: 0\n  } //     {\n  //     id: null,\n  //     title: null,\n  //     price: null,\n  //     quantity: 0\n  // }\n  ],\n  LoadOrderLoading: false,\n  LoadOrdertDone: false,\n  LoadOrderError: null\n};\nexport var ADD_CART_REQUEST = 'ADD_CART_REQUEST';\nexport var ADD_CART_SUCCEESS = 'ADD_CART_SUCCEESS';\nexport var ADD_CART_FAILURE = 'ADD_CART_FAILURE'; // export const addCart = (data) => {\n//     return{\n//         type: ADD_CART,\n//         data\n//     }\n// }\n\nexport var addCartAction = function addCartAction(data) {\n  return {\n    type: ADD_CART_REQUEST,\n    data: data\n  };\n}; // const dummyProduct = {\n//     id: 2,\n//     title: \"Mens Casual Premium Slim Fit T-Shirts\",\n//     price: 22.3,\n//     image: \"https://fakestoreapi.com/img/71-3HjGNDUL._AC_SY879._SX._UX._SY._UY_.jpg\"\n// }\n// const addCart = useCallback((item) => {\n//     console.log(item.id, Order)\n//       const check = Order.find(order =>order.id === item.id);\n//       if(check === undefined){\n//         item.quantity = 1;\n//         console.log('first')\n//         dispatch(addCartAction(item));  \n//         // return {item, quantity: 1};\n//       }else{\n//           Order.map((order)=>{\n//               if(order.id === item.id){\n//                 console.log('중복')\n//                 order.quantity = order.quantity+1;\n//                 dispatch(addCartAction(order));\n//               }\n//             })\n//       }\n// },[]); \n// const addCart = useCallback((item) => {\n//     console.log(item.id, Order)\n//       const check = Order.find(order =>order.id === item.id);\n//       if(check === undefined){\n//         item.quantity = 1;\n//         console.log('first')\n//         dispatch(addCartAction(item));  \n//         // return {item, quantity: 1};\n//       }else{\n//           Order.map((order)=>{\n//               if(order.id === item.id){\n//                 console.log('중복')\n//                 order.quantity = order.quantity+1;\n//                 dispatch(addCartAction(order));\n//               }\n//             })\n//       }\n// },[]);\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_CART_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          LoadOrderLoading: true,\n          LoadOrdertDone: false\n        });\n      }\n\n    case ADD_CART_SUCCEESS:\n      {\n        console.log(Order, action.data.id);\n        var check = Order.find(function (order) {\n          return order.id === item.id;\n        });\n\n        if (check === undefined) {\n          console.log(check, 'check');\n          action.data.quantity = 1;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            Order: [action.data].concat(_toConsumableArray(state.Order)),\n            LoadOrderLoading: false,\n            LoadOrdertDone: true\n          });\n        } else {\n          Order.map(function (order) {\n            console.log(order, 'order');\n\n            if (order.id === action.data.id) {\n              console.log('중복');\n              order.quantity = order.quantity + 1;\n              return _objectSpread(_objectSpread({}, state), {}, {\n                Order: [action.data].concat(_toConsumableArray(state.Order)),\n                LoadOrderLoading: false,\n                LoadOrdertDone: true\n              });\n            }\n          });\n        } // }else{\n        //     action.data.quantity = 1;\n        //     return{\n        //         ...state,\n        //         Order: [action.data, ...state.Order],\n        //         LoadOrderLoading: false,\n        //         LoadOrdertDone: true\n        //     }\n        // }\n        // return{\n        //     ...state,\n        //     Order: [action.data, ...state.Order],\n        //     LoadOrderLoading: false,\n        //     LoadOrdertDone: true\n        // }\n\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/goman/Desktop/react-fake-cart/reducers/cart.js"],"names":["initialState","id","User","userId","Order","quantity","LoadOrderLoading","LoadOrdertDone","LoadOrderError","ADD_CART_REQUEST","ADD_CART_SUCCEESS","ADD_CART_FAILURE","addCartAction","data","type","reducer","state","action","console","log","check","find","order","item","undefined","map"],"mappings":"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","sourcesContent":["const initialState = {\r\n            id:1,\r\n            User:{\r\n                id: 1,\r\n                userId: 'ian'\r\n            },\r\n            Order:[{\r\n                quantity: 0\r\n            }\r\n            //     {\r\n            //     id: null,\r\n            //     title: null,\r\n            //     price: null,\r\n            //     quantity: 0\r\n            // }\r\n        ],\r\n        LoadOrderLoading: false,\r\n        LoadOrdertDone: false,\r\n        LoadOrderError: null,\r\n}\r\n\r\nexport const ADD_CART_REQUEST = 'ADD_CART_REQUEST';\r\nexport const ADD_CART_SUCCEESS = 'ADD_CART_SUCCEESS';\r\nexport const ADD_CART_FAILURE = 'ADD_CART_FAILURE';\r\n\r\n// export const addCart = (data) => {\r\n//     return{\r\n//         type: ADD_CART,\r\n//         data\r\n//     }\r\n// }\r\nexport const addCartAction = (data) => {\r\n    return{\r\n        type: ADD_CART_REQUEST,\r\n        data\r\n    }\r\n}\r\n\r\n// const dummyProduct = {\r\n//     id: 2,\r\n//     title: \"Mens Casual Premium Slim Fit T-Shirts\",\r\n//     price: 22.3,\r\n//     image: \"https://fakestoreapi.com/img/71-3HjGNDUL._AC_SY879._SX._UX._SY._UY_.jpg\"\r\n// }\r\n\r\n// const addCart = useCallback((item) => {\r\n//     console.log(item.id, Order)\r\n//       const check = Order.find(order =>order.id === item.id);\r\n//       if(check === undefined){\r\n//         item.quantity = 1;\r\n//         console.log('first')\r\n//         dispatch(addCartAction(item));  \r\n//         // return {item, quantity: 1};\r\n//       }else{\r\n//           Order.map((order)=>{\r\n//               if(order.id === item.id){\r\n//                 console.log('중복')\r\n//                 order.quantity = order.quantity+1;\r\n//                 dispatch(addCartAction(order));\r\n//               }\r\n//             })\r\n//       }\r\n// },[]); \r\n\r\n\r\n// const addCart = useCallback((item) => {\r\n//     console.log(item.id, Order)\r\n//       const check = Order.find(order =>order.id === item.id);\r\n//       if(check === undefined){\r\n//         item.quantity = 1;\r\n//         console.log('first')\r\n//         dispatch(addCartAction(item));  \r\n//         // return {item, quantity: 1};\r\n//       }else{\r\n//           Order.map((order)=>{\r\n//               if(order.id === item.id){\r\n//                 console.log('중복')\r\n//                 order.quantity = order.quantity+1;\r\n//                 dispatch(addCartAction(order));\r\n//               }\r\n//             })\r\n//       }\r\n// },[]);\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_CART_REQUEST:{\r\n           \r\n            return{\r\n                ...state,\r\n                LoadOrderLoading: true,\r\n                LoadOrdertDone: false,\r\n            }\r\n        }\r\n        case ADD_CART_SUCCEESS:{\r\n            \r\n            console.log(Order,action.data.id);\r\n            const check = Order.find(order =>order.id === item.id);\r\n                if(check === undefined){\r\n                    console.log(check,'check')\r\n                    action.data.quantity = 1;\r\n                        return{\r\n                            ...state,\r\n                            Order: [action.data, ...state.Order],\r\n                            LoadOrderLoading: false,\r\n                            LoadOrdertDone: true\r\n                        }\r\n                }else{\r\n                Order.map((order)=>{\r\n                    console.log(order, 'order')\r\n                if(order.id === action.data.id){    \r\n                  console.log('중복')\r\n                  order.quantity = order.quantity+1;\r\n                  return{\r\n                    ...state,\r\n                    Order: [action.data, ...state.Order],\r\n                    LoadOrderLoading: false,\r\n                    LoadOrdertDone: true\r\n                    }\r\n                }\r\n            })\r\n        }\r\n                // }else{\r\n                //     action.data.quantity = 1;\r\n                //     return{\r\n                //         ...state,\r\n                //         Order: [action.data, ...state.Order],\r\n                //         LoadOrderLoading: false,\r\n                //         LoadOrdertDone: true\r\n                //     }\r\n                // }\r\n            // return{\r\n            //     ...state,\r\n            //     Order: [action.data, ...state.Order],\r\n            //     LoadOrderLoading: false,\r\n            //     LoadOrdertDone: true\r\n            // }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}