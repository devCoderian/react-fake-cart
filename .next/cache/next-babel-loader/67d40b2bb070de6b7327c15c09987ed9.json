{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(productSaga);\n\nimport { all, fork, takeLatest, delay, put, call } from \"@redux-saga/core/effects\";\nimport axios from \"axios\";\nexport default function productSaga() {\n  var _marked, _marked2, _marked3, _marked4, _marked5, _marked6, loadProductAPI, loadProduct, searchProduct, sortProduct, watchLoadProduct, watchSearchProduct;\n\n  return _regeneratorRuntime.wrap(function productSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          watchSearchProduct = function _watchSearchProduct2() {\n            return _regeneratorRuntime.wrap(function watchSearchProduct$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.next = 2;\n                    return takeLatest('SORT_PRODUCT_REQUEST', sortProduct);\n\n                  case 2:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, _marked6);\n          };\n\n          watchSearchProduct = function _watchSearchProduct() {\n            return _regeneratorRuntime.wrap(function watchSearchProduct$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.next = 2;\n                    return takeLatest('SEARCH_PRODUCT_REQUEST', searchProduct);\n\n                  case 2:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _marked5);\n          };\n\n          watchLoadProduct = function _watchLoadProduct() {\n            return _regeneratorRuntime.wrap(function watchLoadProduct$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return takeLatest('LOAD_PRODUCT_REQUEST', loadProduct);\n\n                  case 2:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _marked4);\n          };\n\n          sortProduct = function _sortProduct() {\n            var result;\n            return _regeneratorRuntime.wrap(function sortProduct$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.prev = 0;\n                    _context3.next = 3;\n                    return call(loadProductAPI);\n\n                  case 3:\n                    result = _context3.sent;\n                    _context3.next = 6;\n                    return put({\n                      type: 'SEARCH_PRODUCT_SUCCESS',\n                      data: result.data\n                    });\n\n                  case 6:\n                    _context3.next = 13;\n                    break;\n\n                  case 8:\n                    _context3.prev = 8;\n                    _context3.t0 = _context3[\"catch\"](0);\n                    console.error(_context3.t0);\n                    _context3.next = 13;\n                    return put({\n                      type: 'SEARCH_PRODUCT_FAILURE',\n                      error: _context3.t0.response.data\n                    });\n\n                  case 13:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _marked3, null, [[0, 8]]);\n          };\n\n          searchProduct = function _searchProduct() {\n            var result;\n            return _regeneratorRuntime.wrap(function searchProduct$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.prev = 0;\n                    _context2.next = 3;\n                    return call(loadProductAPI);\n\n                  case 3:\n                    result = _context2.sent;\n                    _context2.next = 6;\n                    return put({\n                      type: 'SEARCH_PRODUCT_SUCCESS',\n                      data: result.data\n                    });\n\n                  case 6:\n                    _context2.next = 13;\n                    break;\n\n                  case 8:\n                    _context2.prev = 8;\n                    _context2.t0 = _context2[\"catch\"](0);\n                    console.error(_context2.t0);\n                    _context2.next = 13;\n                    return put({\n                      type: 'SEARCH_PRODUCT_FAILURE',\n                      error: _context2.t0.response.data\n                    });\n\n                  case 13:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _marked2, null, [[0, 8]]);\n          };\n\n          loadProduct = function _loadProduct(action) {\n            var result;\n            return _regeneratorRuntime.wrap(function loadProduct$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return call(loadProductAPI, action.data);\n\n                  case 3:\n                    result = _context.sent;\n                    _context.next = 6;\n                    return put({\n                      type: 'LOAD_PRODUCT_SUCCESS',\n                      data: result.data\n                    });\n\n                  case 6:\n                    _context.next = 14;\n                    break;\n\n                  case 8:\n                    _context.prev = 8;\n                    _context.t0 = _context[\"catch\"](0);\n                    console.error(_context.t0);\n                    _context.next = 13;\n                    return put({\n                      type: 'LOAD_PRODUCT_FAILURE',\n                      error: _context.t0.response.data\n                    });\n\n                  case 13:\n                    s;\n\n                  case 14:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _marked, null, [[0, 8]]);\n          };\n\n          loadProductAPI = function _loadProductAPI() {\n            var category = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n            console.log(category);\n            return axios.get(\"https://fakestoreapi.com/products/\".concat(category));\n          };\n\n          _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadProduct), _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(searchProduct), _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(sortProduct), _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadProduct), _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchSearchProduct), _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchSearchProduct);\n          _context7.next = 10;\n          return all([fork(watchLoadProduct), fork(watchSearchProduct)]);\n\n        case 10:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["C:/Users/ian07/Desktop/react-fake-shop/sagas/product.js"],"names":["productSaga","all","fork","takeLatest","delay","put","call","axios","loadProductAPI","loadProduct","searchProduct","sortProduct","watchLoadProduct","watchSearchProduct","result","type","data","console","error","response","action","s","category","log","get"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, delay, put, call } from \"@redux-saga/core/effects\";\r\nimport axios from \"axios\";\r\n\r\nexport default function* productSaga(){\r\n\r\n    function loadProductAPI(category=''){\r\n        console.log(category);\r\n        return axios.get(`https://fakestoreapi.com/products/${category}`);\r\n    }\r\n\r\n    function* loadProduct(action) {\r\n        try {\r\n          const result = yield call(loadProductAPI, action.data);\r\n          yield put({\r\n            type: 'LOAD_PRODUCT_SUCCESS',\r\n            data: result.data,\r\n          });\r\n        } catch (err) {\r\n          console.error(err);\r\n          yield put({\r\n            type: 'LOAD_PRODUCT_FAILURE',\r\n            error: err.response.data,\r\n          });s\r\n        }\r\n      }\r\n\r\n    function* searchProduct() {\r\n        try {\r\n          const result = yield call(loadProductAPI);\r\n          yield put({\r\n            type: 'SEARCH_PRODUCT_SUCCESS',\r\n            data: result.data\r\n          })\r\n          } catch (err) {\r\n          console.error(err);\r\n          yield put({\r\n            type: 'SEARCH_PRODUCT_FAILURE',\r\n            error: err.response.data,\r\n          });\r\n        }\r\n      }\r\n    \r\n    function* sortProduct() {\r\n        try {\r\n          const result = yield call(loadProductAPI);\r\n          yield put({\r\n            type: 'SEARCH_PRODUCT_SUCCESS',\r\n            data: result.data\r\n          })\r\n          } catch (err) {\r\n          console.error(err);\r\n          yield put({\r\n            type: 'SEARCH_PRODUCT_FAILURE',\r\n            error: err.response.data,\r\n          });\r\n        }\r\n      }\r\n\r\n      \r\n    function* watchLoadProduct(){\r\n      yield takeLatest('LOAD_PRODUCT_REQUEST', loadProduct);\r\n    }\r\n    function* watchSearchProduct(){\r\n      yield takeLatest('SEARCH_PRODUCT_REQUEST', searchProduct);\r\n    }\r\n    function* watchSearchProduct(){\r\n      yield takeLatest('SORT_PRODUCT_REQUEST', sortProduct);\r\n    }\r\n\r\n    yield all([\r\n        fork(watchLoadProduct),\r\n        fork(watchSearchProduct)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}