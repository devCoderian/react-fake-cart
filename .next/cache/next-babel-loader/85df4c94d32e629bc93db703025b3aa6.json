{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(cartSaga);\n\nimport { all, fork, takeLatest, delay, put } from \"@redux-saga/core/effects\";\nexport default function cartSaga() {\n  var _marked, _marked2, _marked3, _marked4, addCartAPI, addCartAction, removeAllCartAction, watchAddCart, watchRemoveAllCart;\n\n  return _regeneratorRuntime.wrap(function cartSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          watchRemoveAllCart = function _watchRemoveAllCart() {\n            return _regeneratorRuntime.wrap(function watchRemoveAllCart$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return takeLatest('REMOVE_ALL_CART_REQUEST', removeAllCartAction);\n\n                  case 2:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _marked4);\n          };\n\n          watchAddCart = function _watchAddCart() {\n            return _regeneratorRuntime.wrap(function watchAddCart$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return takeLatest('ADD_CART_REQUEST', addCartAction);\n\n                  case 2:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _marked3);\n          };\n\n          removeAllCartAction = function _removeAllCartAction() {\n            return _regeneratorRuntime.wrap(function removeAllCartAction$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.prev = 0;\n                    _context2.next = 3;\n                    return put({\n                      type: 'REMOVE_ALL_CART_SUCCEESS'\n                    });\n\n                  case 3:\n                    _context2.next = 9;\n                    break;\n\n                  case 5:\n                    _context2.prev = 5;\n                    _context2.t0 = _context2[\"catch\"](0);\n                    _context2.next = 9;\n                    return put({\n                      type: 'ADD_CART_FAILURE',\n                      data: _context2.t0.response.data\n                    });\n\n                  case 9:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _marked2, null, [[0, 5]]);\n          };\n\n          addCartAction = function _addCartAction(action) {\n            return _regeneratorRuntime.wrap(function addCartAction$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return put({\n                      type: 'ADD_CART_SUCCEESS',\n                      data: action.data\n                    });\n\n                  case 3:\n                    _context.next = 9;\n                    break;\n\n                  case 5:\n                    _context.prev = 5;\n                    _context.t0 = _context[\"catch\"](0);\n                    _context.next = 9;\n                    return put({\n                      type: 'ADD_CART_FAILURE',\n                      data: _context.t0.response.data\n                    });\n\n                  case 9:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _marked, null, [[0, 5]]);\n          };\n\n          addCartAPI = function _addCartAPI(data) {\n            return axios.post('/api/addCart', data); // -> 실제 서버에 요청을 보냄\n          };\n\n          _marked = /*#__PURE__*/_regeneratorRuntime.mark(addCartAction), _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(removeAllCartAction), _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddCart), _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemoveAllCart);\n          _context5.next = 8;\n          return all([fork(watchAddCart)]);\n\n        case 8:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/ian07/Desktop/react-fake-shop/sagas/cart.js"],"names":["cartSaga","all","fork","takeLatest","delay","put","addCartAPI","addCartAction","removeAllCartAction","watchAddCart","watchRemoveAllCart","type","data","response","action","axios","post"],"mappings":";;qDACyBA,Q;;AADzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,GAAvC,QAAiD,0BAAjD;AACA,eAAe,SAAUL,QAAV;AAAA,6CAGEM,UAHF,EASGC,aATH,EAyBGC,mBAzBH,EA2CDC,YA3CC,EA+CDC,kBA/CC;;AAAA;AAAA;AAAA;AAAA;AA+CDA,UAAAA,kBA/CC;AAAA;AAAA;AAAA;AAAA;AAAA;AAgDP,2BAAMP,UAAU,CAAC,yBAAD,EAA4BK,mBAA5B,CAAhB;;AAhDO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2CDC,UAAAA,YA3CC;AAAA;AAAA;AAAA;AAAA;AAAA;AA4CP,2BAAMN,UAAU,CAAC,kBAAD,EAAqBI,aAArB,CAAhB;;AA5CO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyBGC,UAAAA,mBAzBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BC,2BAAMH,GAAG,CAAC;AACNM,sBAAAA,IAAI,EAAE;AADA,qBAAD,CAAT;;AA9BD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAkCC,2BAAMN,GAAG,CAAC;AACNM,sBAAAA,IAAI,EAAE,kBADA;AAENC,sBAAAA,IAAI,EAAC,aAAIC,QAAJ,CAAaD;AAFZ,qBAAD,CAAT;;AAlCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASGL,UAAAA,aATH,2BASiBO,MATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcC,2BAAMT,GAAG,CAAC;AACNM,sBAAAA,IAAI,EAAE,mBADA;AAENC,sBAAAA,IAAI,EAAEE,MAAM,CAACF;AAFP,qBAAD,CAAT;;AAdD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAmBC,2BAAMP,GAAG,CAAC;AACNM,sBAAAA,IAAI,EAAE,kBADA;AAENC,sBAAAA,IAAI,EAAC,YAAIC,QAAJ,CAAaD;AAFZ,qBAAD,CAAT;;AAnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGEN,UAAAA,UAHF,wBAGaM,IAHb,EAGkB;AACrB,mBAAOG,KAAK,CAACC,IAAN,CAAW,cAAX,EAA2BJ,IAA3B,CAAP,CADqB,CAErB;AAEH,WAPM;;AAAA,0DASGL,aATH,oDAyBGC,mBAzBH,oDA2CDC,YA3CC,oDA+CDC,kBA/CC;AAAA;AAkDX,iBAAMT,GAAG,CAAC,CACNC,IAAI,CAACO,YAAD,CADE,CAAD,CAAT;;AAlDW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, takeLatest, delay, put} from \"@redux-saga/core/effects\";\r\nexport default function* cartSaga(){\r\n    \r\n\r\n        function addCartAPI(data){\r\n            return axios.post('/api/addCart', data)\r\n            // -> 실제 서버에 요청을 보냄\r\n\r\n        }\r\n\r\n        function* addCartAction(action){\r\n            try{\r\n                //yield call해서 로그인 api를 실행함\r\n                //const result =  yield call(addCartAPI, action.data);\r\n                // yield delay(1000);\r\n                yield put({\r\n                    type: 'ADD_CART_SUCCEESS',\r\n                    data: action.data\r\n                });\r\n            }catch(err){\r\n                yield put({\r\n                    type: 'ADD_CART_FAILURE',\r\n                    data:err.response.data,\r\n                });\r\n            }\r\n        }\r\n        function* removeAllCartAction(){\r\n            try{\r\n                //yield call해서 로그인 api를 실행함\r\n                //const result =  yield call(addCartAPI, action.data);\r\n                // yield delay(1000);\r\n                yield put({\r\n                    type: 'REMOVE_ALL_CART_SUCCEESS',\r\n                });\r\n            }catch(err){\r\n                yield put({\r\n                    type: 'ADD_CART_FAILURE',\r\n                    data:err.response.data,\r\n                });\r\n            }\r\n        }\r\n\r\n        \r\n\r\n    function* watchAddCart(){\r\n        yield takeLatest('ADD_CART_REQUEST', addCartAction);\r\n    }\r\n\r\n    function* watchRemoveAllCart(){\r\n        yield takeLatest('REMOVE_ALL_CART_REQUEST', removeAllCartAction);\r\n    }\r\n    yield all([\r\n        fork(watchAddCart)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}