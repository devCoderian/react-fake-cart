{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ian07\\\\Desktop\\\\react-fake-shop\\\\components\\\\MenuLayout.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Layout, Menu, PageHeader, Button } from 'antd';\nimport { UnorderedListOutlined, HomeOutlined, ShoppingCartOutlined } from '@ant-design/icons';\nconst {\n  SubMenu\n} = Menu;\nconst {\n  Content,\n  Sider\n} = Layout;\nimport MenuHeader from './MenuHeader';\nimport LoginFrom from './LoginForm';\nimport Link from 'next/link';\n\nconst MenuLayout = ({\n  children\n}) => {\n  // const [isLogIn, setIsLogIn] = useState(false);\n  // 리덕스로 변경\n  //const { loginDone } = useSelector(state => state.user);\n  //isLogin이 바뀌면 알아서 useSelector 컴포넌트 리렌더링 된다. \n  const {\n    me\n  } = useSelector(state => state.user);\n  const cal = useMemo(() => {\n    let total = Order.map(order => {\n      const {\n        quantity\n      } = order;\n      return quantity;\n    }).reduce((l, r) => l + r, 0);\n    return total;\n  }, [Order]);\n  console.log(cal);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(PageHeader, {\n    ghost: false,\n    title: __jsx(Button, {\n      size: \"large\",\n      shape: \"round\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }\n    }, __jsx(Link, {\n      href: \"/product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 55\n      }\n    }, \"FAKE-SHOP\")),\n    subTitle: \"by devCoderian\",\n    extra: me ? __jsx(MenuHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 23\n      }\n    }) : __jsx(LoginFrom, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }\n  }), __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(Content, {\n    className: \"site-layout-background\",\n    style: {\n      padding: 24,\n      margin: 0,\n      minHeight: '100vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, children))));\n};\n\nMenuLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default MenuLayout;","map":{"version":3,"sources":["C:/Users/ian07/Desktop/react-fake-shop/components/MenuLayout.js"],"names":["React","useRef","useState","useMemo","PropTypes","useSelector","Layout","Menu","PageHeader","Button","UnorderedListOutlined","HomeOutlined","ShoppingCartOutlined","SubMenu","Content","Sider","MenuHeader","LoginFrom","Link","MenuLayout","children","me","state","user","cal","total","Order","map","order","quantity","reduce","l","r","console","log","padding","margin","minHeight","propTypes","node","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAsBC,QAAtB,EAA+BC,OAA/B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,UAAvB,EAAmCC,MAAnC,QAAgD,MAAhD;AACA,SAASC,qBAAT,EAAgCC,YAAhC,EAA8CC,oBAA9C,QAAyE,mBAAzE;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAcN,IAApB;AACA,MAAM;AAAEO,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAqBT,MAA3B;AAEA,OAAOU,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAEnC;AACA;AACA;AACA;AACA,QAAM;AAACC,IAAAA;AAAD,MAAShB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAMC,GAAG,GAAGrB,OAAO,CAAC,MAAK;AACvB,QAAIsB,KAAK,GAAIC,KAAK,CAACC,GAAN,CAAYC,KAAD,IAAU;AAC9B,YAAM;AAAEC,QAAAA;AAAF,UAAeD,KAArB;AACA,aAAOC,QAAP;AACH,KAHY,EAGVC,MAHU,CAGH,CAACC,CAAD,EAAIC,CAAJ,KAASD,CAAC,GAACC,CAHR,EAGW,CAHX,CAAb;AAIA,WAAOP,KAAP;AAEH,GAPoB,EAOnB,CAACC,KAAD,CAPmB,CAAnB;AAQFO,EAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;AACE,SACM,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,MAAC,UAAD;AACC,IAAA,KAAK,EAAE,KADR;AAEC,IAAA,KAAK,EAAE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,KAAK,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAnC,CAFR;AAGC,IAAA,QAAQ,EAAC,gBAHV;AAIC,IAAA,KAAK,EAAEH,EAAE,GAAC,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,GAAe,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAOA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA0BE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,KAAK,EAAE;AACLc,MAAAA,OAAO,EAAE,EADJ;AAELC,MAAAA,MAAM,EAAE,CAFH;AAGLC,MAAAA,SAAS,EAAE;AAHN,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGjB,QARH,CADF,CA1BF,CAPA,CADN;AAiDD,CAjED;;AAmEAD,UAAU,CAACmB,SAAX,GAAuB;AACnBlB,EAAAA,QAAQ,EAAEhB,SAAS,CAACmC,IAAV,CAAeC;AADN,CAAvB;AAGA,eAAerB,UAAf","sourcesContent":["import React,{useRef, useState,useMemo} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Layout, Menu, PageHeader, Button} from 'antd';\r\nimport { UnorderedListOutlined, HomeOutlined, ShoppingCartOutlined} from '@ant-design/icons';\r\nconst { SubMenu } = Menu;\r\nconst { Content, Sider } = Layout;\r\n\r\nimport MenuHeader from './MenuHeader';\r\nimport LoginFrom from './LoginForm';\r\nimport Link from 'next/link';\r\n\r\n\r\nconst MenuLayout = ({ children }) => {\r\n\r\n  // const [isLogIn, setIsLogIn] = useState(false);\r\n  // 리덕스로 변경\r\n  //const { loginDone } = useSelector(state => state.user);\r\n  //isLogin이 바뀌면 알아서 useSelector 컴포넌트 리렌더링 된다. \r\n  const {me}  =  useSelector((state) => state.user);\r\n  const cal = useMemo(() =>{\r\n    let total =  Order.map ((order) =>{\r\n        const { quantity } = order;\r\n        return quantity;\r\n    }).reduce((l, r)=> l+r, 0);\r\n    return total;\r\n\r\n},[Order]);\r\nconsole.log(cal)\r\n  return (\r\n        <Layout>\r\n           <PageHeader\r\n            ghost={false}\r\n            title={<Button size='large' shape=\"round\"><Link href =\"/product\">FAKE-SHOP</Link></Button>} \r\n            subTitle=\"by devCoderian\"\r\n            extra={me?<MenuHeader/>:<LoginFrom/>}\r\n            ></PageHeader>\r\n        <Layout>\r\n        \r\n          \r\n          {/* <Sider width={200} className=\"site-layout-background\">\r\n            <Menu\r\n              mode=\"inline\"\r\n              defaultOpenKeys={['sub1']}\r\n              style={{ height: '100%', borderRight: 0 }}\r\n              selectable ={false}\r\n            >\r\n                <Menu.Item key=\"1\" icon={<HomeOutlined />}>\r\n                <Link href =\"/\">Home</Link>\r\n                </Menu.Item>\r\n                  <Menu.Item key=\"2\" icon={<ShoppingCartOutlined />}>\r\n                  <Link href =\"/cart\">My Cart</Link>\r\n                </Menu.Item>\r\n                <SubMenu key=\"sub1\" icon={<UnorderedListOutlined />} title=\"Product\">\r\n                    <Menu.Item key=\"3\"><Link href =\"/product\">All</Link></Menu.Item>\r\n                    <Menu.Item key=\"4\"><Link href =\"/product\">Mens</Link></Menu.Item>\r\n                    <Menu.Item key=\"5\"><Link href =\"/product\">Womens</Link></Menu.Item>\r\n                    <Menu.Item key=\"6\"><Link href =\"/product/category/jewelery\">jewelery</Link></Menu.Item>\r\n                    <Menu.Item key=\"7\"><Link href =\"/product\">electronics</Link></Menu.Item>\r\n                </SubMenu>\r\n            </Menu>\r\n          </Sider> */}\r\n\r\n          <Layout>\r\n            <Content\r\n              className=\"site-layout-background\"\r\n              style={{\r\n                padding: 24,\r\n                margin: 0,\r\n                minHeight: '100vh',\r\n              }}\r\n            >\r\n              {children}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n}\r\n\r\nMenuLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n}\r\nexport default MenuLayout;\r\n"]},"metadata":{},"sourceType":"module"}